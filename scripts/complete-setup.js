const mysql = require('mysql2/promise');
const { exec } = require('child_process');
const { promisify } = require('util');
const execAsync = promisify(exec);

async function completeSetup() {
  let connection;
  
  try {
    console.log('üöÄ Iniciando setup completo do banco de dados...');
    
    // Conectar ao MySQL
    connection = await mysql.createConnection({
      host: 'localhost',
      port: 3306,
      user: 'root',
      password: '',
      database: 'u228402541_opsevor'
    });

    console.log('‚úÖ Conectado ao banco de dados');

    // Desabilitar verifica√ß√£o de foreign keys temporariamente
    await connection.execute('SET FOREIGN_KEY_CHECKS = 0');

    // Obter todas as tabelas
    const [tables] = await connection.execute(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'u228402541_opsevor'
    `);

    // Remover todas as tabelas
    for (const table of tables) {
      const tableName = table.TABLE_NAME;
      console.log(`üóëÔ∏è  Removendo tabela: ${tableName}`);
      await connection.execute(`DROP TABLE IF EXISTS \`${tableName}\``);
    }

    // Reabilitar verifica√ß√£o de foreign keys
    await connection.execute('SET FOREIGN_KEY_CHECKS = 1');

    console.log('‚úÖ Banco de dados limpo com sucesso');

    // Fechar conex√£o
    await connection.end();

    // Executar migrations
    console.log('üìã Executando migrations...');
    await execAsync('npm run migration:run');
    console.log('‚úÖ Migrations executadas');

    // Executar seed
    console.log('üå± Executando seed...');
    await execAsync('npm run seed:run');
    console.log('‚úÖ Seed executado');

    console.log('üéâ Setup completo conclu√≠do!');
    console.log('\nüìä Dados dispon√≠veis:');
    console.log('- 2 usu√°rios de teste');
    console.log('- 2 projetos');
    console.log('- 2 quizzes');
    console.log('- 3 leads de exemplo');
    console.log('\nüîë Credenciais:');
    console.log('- joao@exemplo.com / senha123');
    console.log('- maria@exemplo.com / senha123');

  } catch (error) {
    console.error('‚ùå Erro durante setup:', error.message);
    if (connection) {
      await connection.end();
    }
    process.exit(1);
  }
}

completeSetup(); 