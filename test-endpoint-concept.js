const axios = require('axios');

const API_BASE = 'http://localhost:3000';

console.log('üîç DEMONSTRA√á√ÉO: Endpoints de Leads\n');
console.log('=' .repeat(60));

// Simular dados de exemplo
const EXAMPLE_QUIZ_ID = '5f3e5a33-f22a-4a25-a9ec-2da98355d87f';
const EXAMPLE_PROJECT_ID = 'fb624020-dff7-438c-b68c-884edb468f68';

console.log('üìã ENDPOINTS DISPON√çVEIS:\n');

console.log('‚úÖ 1. POST /quizzes/{quizId}/leads');
console.log('   - Para enviar respostas de quiz (p√∫blico)');
console.log('   - Exemplo: POST /quizzes/5f3e5a33-f22a-4a25-a9ec-2da98355d87f/leads');
console.log('   - Par√¢metro: quizId (ID do quiz)\n');

console.log('‚úÖ 2. GET /quizzes/project/{projectId}/leads');
console.log('   - Para listar leads de um projeto (autenticado)');
console.log('   - Exemplo: GET /quizzes/project/fb624020-dff7-438c-b68c-884edb468f68/leads');
console.log('   - Par√¢metro: projectId (ID do projeto)\n');

console.log('‚ùå 3. POST /quizzes/{projectId}/leads');
console.log('   - N√ÉO EXISTE - Este √© o erro que voc√™ estava enfrentando');
console.log('   - Exemplo: POST /quizzes/fb624020-dff7-438c-b68c-884edb468f68/leads');
console.log('   - Resultado: 404 Not Found\n');

console.log('=' .repeat(60));
console.log('üîÑ FLUXO CORRETO NO FRONTEND:\n');

console.log('1Ô∏è‚É£ Buscar quiz p√∫blico:');
console.log(`   GET /quizzes/${EXAMPLE_QUIZ_ID}/public`);
console.log('   Retorna: { id: "quiz-uuid", project: { id: "project-uuid", ... } }\n');

console.log('2Ô∏è‚É£ Enviar respostas (CORRETO):');
console.log(`   POST /quizzes/${EXAMPLE_QUIZ_ID}/leads`);
console.log('   ‚úÖ Usando quizId na URL\n');

console.log('3Ô∏è‚É£ Enviar respostas (INCORRETO):');
console.log(`   POST /quizzes/${EXAMPLE_PROJECT_ID}/leads`);
console.log('   ‚ùå Usando projectId na URL (N√ÉO EXISTE)\n');

console.log('=' .repeat(60));
console.log('üß™ TESTE PR√ÅTICO:\n');

async function testCorrectEndpoint() {
  console.log('‚úÖ Testando endpoint CORRETO...');
  try {
    const response = await axios.post(
      `${API_BASE}/quizzes/${EXAMPLE_QUIZ_ID}/leads`,
      {
        email: "teste@exemplo.com",
        name: "Usu√°rio Teste",
        phone: "+5511999999999",
        custom_fields: {},
        responses: { question1: "resposta1" },
        source: "teste-script"
      },
      {
        headers: { 'Content-Type': 'application/json' }
      }
    );
    console.log('‚úÖ Sucesso! Lead criado:', response.data.id);
  } catch (error) {
    if (error.response?.status === 404) {
      console.log('‚ùå Quiz n√£o encontrado (ID pode n√£o existir no banco)');
    } else {
      console.log('‚ùå Erro:', error.response?.data?.message || error.message);
    }
  }
}

async function testWrongEndpoint() {
  console.log('\n‚ùå Testando endpoint INCORRETO...');
  try {
    const response = await axios.post(
      `${API_BASE}/quizzes/${EXAMPLE_PROJECT_ID}/leads`, // ‚ùå Usando projectId
      {
        email: "teste@exemplo.com",
        name: "Usu√°rio Teste",
        responses: {}
      }
    );
    console.log('‚ùå Isso n√£o deveria funcionar!');
  } catch (error) {
    if (error.response?.status === 404) {
      console.log('‚úÖ Erro esperado: Endpoint n√£o existe');
      console.log('‚úÖ Confirma que POST /quizzes/{projectId}/leads N√ÉO EXISTE');
    } else {
      console.log('‚ùå Erro inesperado:', error.response?.data?.message || error.message);
    }
  }
}

async function runTests() {
  await testCorrectEndpoint();
  await testWrongEndpoint();
  
  console.log('\n' + '=' .repeat(60));
  console.log('üìö PR√ìXIMOS PASSOS:');
  console.log('1. Verifique se o backend est√° rodando: npm run start:dev');
  console.log('2. Use IDs reais do seu banco de dados');
  console.log('3. Atualize o frontend para usar quiz.id na URL');
  console.log('4. Teste com dados reais');
  console.log('\nüìñ Documenta√ß√£o completa: LEADS_ENDPOINT_SOLUTION.md');
}

// Executar se chamado diretamente
if (require.main === module) {
  runTests().catch(console.error);
}

module.exports = { testCorrectEndpoint, testWrongEndpoint }; 