const axios = require('axios');

const BASE_URL = 'http://localhost:3000';

async function checkSwagger() {
  console.log('üîç Verificando Swagger e rotas...\n');

  try {
    // 1. Verificar se o servidor est√° rodando
    console.log('1Ô∏è‚É£ Verificando se o servidor est√° rodando...');
    const healthCheck = await axios.get(`${BASE_URL}`);
    console.log('‚úÖ Servidor rodando:', healthCheck.status);

    // 2. Verificar se o Swagger est√° acess√≠vel
    console.log('\n2Ô∏è‚É£ Verificando Swagger...');
    const swaggerResponse = await axios.get(`${BASE_URL}/api`);
    console.log('‚úÖ Swagger acess√≠vel:', swaggerResponse.status);

    // 3. Verificar se a documenta√ß√£o JSON do Swagger est√° dispon√≠vel
    console.log('\n3Ô∏è‚É£ Verificando documenta√ß√£o JSON do Swagger...');
    const swaggerJson = await axios.get(`${BASE_URL}/api-json`);
    console.log('‚úÖ Documenta√ß√£o JSON dispon√≠vel');

    // 4. Procurar pela rota espec√≠fica na documenta√ß√£o
    console.log('\n4Ô∏è‚É£ Procurando pela rota /quizzes/{id}/public na documenta√ß√£o...');
    const paths = swaggerJson.data.paths;
    
    let foundRoute = false;
    for (const path in paths) {
      if (path.includes('/quizzes/') && path.includes('/public')) {
        console.log('‚úÖ Rota encontrada:', path);
        console.log('üìÑ M√©todos dispon√≠veis:', Object.keys(paths[path]));
        foundRoute = true;
      }
    }

    if (!foundRoute) {
      console.log('‚ùå Rota /quizzes/{id}/public n√£o encontrada na documenta√ß√£o');
      console.log('\nüìã Rotas dispon√≠veis que cont√™m "quizzes":');
      for (const path in paths) {
        if (path.includes('quizzes')) {
          console.log('  -', path, '->', Object.keys(paths[path]));
        }
      }
    }

    // 5. Testar a rota diretamente
    console.log('\n5Ô∏è‚É£ Testando a rota diretamente...');
    try {
      const routeTest = await axios.get(`${BASE_URL}/quizzes/5f3e5a33-f22a-4a25-a9ec-2da98355d87f/public`);
      console.log('‚úÖ Rota funcionando:', routeTest.status);
    } catch (error) {
      console.log('‚ùå Rota n√£o funcionando:', error.response?.status || error.message);
      if (error.response?.data) {
        console.log('üìÑ Erro:', JSON.stringify(error.response.data, null, 2));
      }
    }

  } catch (error) {
    console.error('‚ùå Erro ao verificar:', error.message);
  }
}

checkSwagger().catch(console.error); 